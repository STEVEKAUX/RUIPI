package View;

import Model.Conexion;
import Controller.PatientController;
import Model.UserDAO;
import Model.Patient;
import Model.User;
import java.sql.*;
import java.io.ByteArrayInputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import javax.swing.table.DefaultTableModel;

public final class FormPatientsManagement extends javax.swing.JInternalFrame {

    public ByteArrayInputStream huellaPaciente;
    Integer sizeHuella;
    boolean isOpen = false;
    public boolean tipoQuery = false;
    Toaster toaster;
    public int id_paciente;
    FormEnterBrand asociarHuella;
    public DefaultTableModel modt;
    Patient p = new Patient();
    public static PatientController pc;

    public FormPatientsManagement() {
        setQueryInsert();
        initComponents();

        disableButtons(false, true, true);
        modt = (DefaultTableModel) tableP.getModel();
        User u = new User();
        UserDAO uDao = new UserDAO();
        Patient p = new Patient();
        //relación con el controlador
        pc = new PatientController(u, uDao, this, p);
        lblIndicadorQuery.setText("PUEDES BUSCAR, IDENTIFICAR O REGISTRAR UN NUEVO PACIENTE.");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIdPaciente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombrePaciente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtApellidoPaciente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dateFNacimiento = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTipoDoc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNumDoc = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCiudadO = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDepO = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        comboGestante = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        comboEtnia = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        txtTel = new javax.swing.JTextField();
        btnSaveP = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        btnAssociate = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnIdentify = new javax.swing.JButton();
        btnSearchUpdateP = new javax.swing.JButton();
        btnDeleteP = new javax.swing.JButton();
        btnNewP = new javax.swing.JButton();
        txtPYDT = new javax.swing.JTextField();
        comboMunicipio = new javax.swing.JComboBox<>();
        comboComunidad = new javax.swing.JComboBox<>();
        comboRh = new javax.swing.JComboBox<>();
        comboSexo = new javax.swing.JComboBox<>();
        lblIndicadorQuery = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        dateRegister = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableP = new javax.swing.JTable();

        setBackground(new java.awt.Color(37, 51, 61));
        setBorder(null);
        setClosable(true);
        setIconifiable(true);
        setTitle("Gestión de Pacientes");
        setFocusable(false);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/patients_20px.png"))); // NOI18N
        setMinimumSize(new java.awt.Dimension(800, 450));
        setPreferredSize(new java.awt.Dimension(1197, 653));

        jPanel1.setBackground(new java.awt.Color(37, 51, 61));

        jPanel2.setBackground(new java.awt.Color(37, 51, 61));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(108, 216, 158), 1, true));
        jPanel2.setToolTipText("");
        jPanel2.setAutoscrolls(true);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(108, 216, 158));
        jLabel1.setText("ID Paciente");

        txtIdPaciente.setEditable(false);
        txtIdPaciente.setBackground(new java.awt.Color(187, 187, 187));
        txtIdPaciente.setToolTipText("");
        txtIdPaciente.setRequestFocusEnabled(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(108, 216, 158));
        jLabel2.setText("Nombres*");

        txtNombrePaciente.setBackground(new java.awt.Color(255, 255, 255));
        txtNombrePaciente.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(108, 216, 158));
        jLabel3.setText("Apellidos*");

        txtApellidoPaciente.setBackground(new java.awt.Color(255, 255, 255));
        txtApellidoPaciente.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(108, 216, 158));
        jLabel4.setText("Fecha Nacimiento");

        dateFNacimiento.setBackground(new java.awt.Color(255, 255, 255));
        dateFNacimiento.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(108, 216, 158));
        jLabel5.setText("Municipio");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(108, 216, 158));
        jLabel6.setText("Comunidad");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(108, 216, 158));
        jLabel7.setText("Tipo Documento");

        txtTipoDoc.setBackground(new java.awt.Color(255, 255, 255));
        txtTipoDoc.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(108, 216, 158));
        jLabel8.setText("Núm Documento");

        txtNumDoc.setBackground(new java.awt.Color(255, 255, 255));
        txtNumDoc.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(108, 216, 158));
        jLabel9.setText("Ciudad de Origen");

        txtCiudadO.setBackground(new java.awt.Color(255, 255, 255));
        txtCiudadO.setToolTipText("");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(108, 216, 158));
        jLabel10.setText("Dpto de Origen");

        txtDepO.setBackground(new java.awt.Color(255, 255, 255));
        txtDepO.setToolTipText("");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(108, 216, 158));
        jLabel11.setText("Sexo");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(108, 216, 158));
        jLabel12.setText("RH");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(108, 216, 158));
        jLabel13.setText("Gestante");

        comboGestante.setBackground(new java.awt.Color(255, 255, 255));
        comboGestante.setForeground(new java.awt.Color(37, 51, 61));
        comboGestante.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "SÍ", "NO", "NO APLICA" }));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(108, 216, 158));
        jLabel14.setText("Programa de P y DT");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(108, 216, 158));
        jLabel15.setText("Etnia");

        comboEtnia.setBackground(new java.awt.Color(255, 255, 255));
        comboEtnia.setForeground(new java.awt.Color(37, 51, 61));
        comboEtnia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "Arhuaco", "Kogui", "Wiwa", "Otro" }));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(108, 216, 158));
        jLabel16.setText("Teléfono o Celular");

        txtTel.setBackground(new java.awt.Color(255, 255, 255));
        txtTel.setToolTipText("");

        btnSaveP.setBackground(new java.awt.Color(108, 216, 158));
        btnSaveP.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnSaveP.setForeground(new java.awt.Color(37, 51, 61));
        btnSaveP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save_20px.png"))); // NOI18N
        btnSaveP.setText("Guardar");
        btnSaveP.setBorder(null);
        btnSaveP.setFocusable(false);
        btnSaveP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSavePMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSavePMouseExited(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(108, 216, 158));
        jLabel19.setText("Asociar Huella*");

        btnAssociate.setBackground(new java.awt.Color(108, 216, 158));
        btnAssociate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAssociate.setForeground(new java.awt.Color(37, 51, 61));
        btnAssociate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/in_finger_20px.png"))); // NOI18N
        btnAssociate.setBorder(null);
        btnAssociate.setFocusable(false);
        btnAssociate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAssociateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAssociateMouseExited(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(37, 51, 61));

        btnIdentify.setBackground(new java.awt.Color(108, 216, 158));
        btnIdentify.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnIdentify.setForeground(new java.awt.Color(37, 51, 61));
        btnIdentify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fingerprint_20px.png"))); // NOI18N
        btnIdentify.setText("Identificar");
        btnIdentify.setBorder(null);
        btnIdentify.setFocusable(false);
        btnIdentify.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnIdentifyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnIdentifyMouseExited(evt);
            }
        });

        btnSearchUpdateP.setBackground(new java.awt.Color(108, 216, 158));
        btnSearchUpdateP.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnSearchUpdateP.setForeground(new java.awt.Color(37, 51, 61));
        btnSearchUpdateP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search_20px.png"))); // NOI18N
        btnSearchUpdateP.setText("Buscar y Actualizar");
        btnSearchUpdateP.setBorder(null);
        btnSearchUpdateP.setFocusable(false);
        btnSearchUpdateP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSearchUpdatePMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSearchUpdatePMouseExited(evt);
            }
        });

        btnDeleteP.setBackground(new java.awt.Color(252, 87, 118));
        btnDeleteP.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnDeleteP.setForeground(new java.awt.Color(37, 51, 61));
        btnDeleteP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete_user_20px.png"))); // NOI18N
        btnDeleteP.setText("Eliminar");
        btnDeleteP.setBorder(null);
        btnDeleteP.setFocusable(false);
        btnDeleteP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeletePMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeletePMouseExited(evt);
            }
        });

        btnNewP.setBackground(new java.awt.Color(108, 216, 158));
        btnNewP.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnNewP.setForeground(new java.awt.Color(37, 51, 61));
        btnNewP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add_user_20px.png"))); // NOI18N
        btnNewP.setText("Nuevo");
        btnNewP.setBorder(null);
        btnNewP.setFocusable(false);
        btnNewP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNewPMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNewPMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(btnSearchUpdateP, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnIdentify, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(btnNewP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(btnDeleteP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchUpdateP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(btnNewP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnIdentify, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        txtPYDT.setEditable(false);
        txtPYDT.setBackground(new java.awt.Color(187, 187, 187));

        comboMunicipio.setBackground(new java.awt.Color(255, 255, 255));
        comboMunicipio.setForeground(new java.awt.Color(37, 51, 61));
        comboMunicipio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "Santa Marta", "Aracataca", "Dibulla", "Cienaga", "Fundación", "Rioacha" }));

        comboComunidad.setBackground(new java.awt.Color(255, 255, 255));
        comboComunidad.setForeground(new java.awt.Color(37, 51, 61));
        comboComunidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "Gonawindua", "Gogzezhi", "Uleizhi", "Chivilongui", "Bunkwimake", "Gunmako", "Serankwa", "Dwanawimaku", "Pueblo Viejo", "Seiviaka", "Kasakumake", "Atigumake", "Gomake", "Parquesito", "Dumingueka", "Cherwa", "Sanantonio", "Kankawarwa", "Kantinurwa", "Vindiva", "Bunkwamake", "Singuney", "Carrizal" }));

        comboRh.setBackground(new java.awt.Color(255, 255, 255));
        comboRh.setForeground(new java.awt.Color(37, 51, 61));
        comboRh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "A+", "A-", "AB+", "AB-", "B+", "B-", "O+", "O-" }));

        comboSexo.setBackground(new java.awt.Color(255, 255, 255));
        comboSexo.setForeground(new java.awt.Color(37, 51, 61));
        comboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONAR", "Masculino", "Femenino" }));

        lblIndicadorQuery.setFont(new java.awt.Font("Segoe UI Symbol", 0, 16)); // NOI18N
        lblIndicadorQuery.setForeground(new java.awt.Color(255, 255, 255));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(108, 216, 158));
        jLabel17.setText("Dirección");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(108, 216, 158));
        jLabel18.setText("Email");

        txtDireccion.setBackground(new java.awt.Color(255, 255, 255));
        txtDireccion.setToolTipText("");

        txtEmail.setBackground(new java.awt.Color(255, 255, 255));
        txtEmail.setToolTipText("");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(108, 216, 158));
        jLabel20.setText("Fecha Registro");

        dateRegister.setBackground(new java.awt.Color(255, 255, 255));
        dateRegister.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIndicadorQuery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(dateRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel1)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dateFNacimiento)
                                        .addComponent(txtApellidoPaciente)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtIdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(0, 2, Short.MAX_VALUE))))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel19))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnAssociate, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                        .addComponent(comboComunidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(comboMunicipio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(0, 38, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSaveP, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboRh, 0, 180, Short.MAX_VALUE)
                                    .addComponent(comboSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtDepO, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                            .addComponent(txtTipoDoc, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtNumDoc, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtCiudadO, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel13)
                                                    .addComponent(jLabel15)
                                                    .addComponent(jLabel14))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(comboGestante, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(comboEtnia, javax.swing.GroupLayout.Alignment.TRAILING, 0, 180, Short.MAX_VALUE)
                                                    .addComponent(txtPYDT, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addGap(1, 1, 1))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel16)
                                                    .addComponent(jLabel17)
                                                    .addComponent(jLabel18))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtTel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addContainerGap(54, Short.MAX_VALUE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblIndicadorQuery, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtIdPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtNumDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(comboEtnia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(txtApellidoPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(txtCiudadO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel14)
                                .addComponent(txtPYDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(dateFNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(txtDepO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(txtTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(comboGestante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel11)
                        .addComponent(comboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel17)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jLabel12)
                        .addComponent(comboComunidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboRh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18))
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(dateRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAssociate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSaveP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(26, 26, 26))))
        );

        jPanel3.setBackground(new java.awt.Color(37, 51, 61));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(108, 216, 158)));

        tableP.setBackground(new java.awt.Color(255, 255, 255));
        tableP.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tableP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID paciente", "Nombres", "Apellidos", "Fecha Nacimiento", "Municipio", "Comunidad", "Tipo Documento", "Núm Documeto", "Ciudad Origen", "Dpto Origen", "Sexo", "RH", "Gestante", "Etnia", "Programa PyDT", "Celular", "Direccion", "Email", "Fecha Registro"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableP);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //tratando de listar al iniciar

    //método del botón Asociar Huella se encarga de crear la instancia del lector de huellas que asocia la huella del paciente
    public void asociate() {

        disableButtons(false, false, false);

        if (isOpen == false) {
            asociarHuella = new FormEnterBrand(this);
            asociarHuella.setVisible(true);
            isOpen = true;
            pc.clearTable();

        } else {

            //toaster.error("¡Nombre de usuario o contraseña inválidos!");
            JOptionPane.showMessageDialog(null, "Ya hay una ventana del 'Lector de Huellas' abierta", "Lector en uso", JOptionPane.WARNING_MESSAGE);
            btnSearchUpdateOn();

        }

    }

    //Se encarga de realizar la inserción o la actualización de los datos del paciente
    //siempre y cuando los campos no estén vaciós dependiendo si es una búsqueda o una inserción de paciente
    public void saveP() {

        pc.clearTable();

        if (emptyFields()) {

            if (tipoQuery) {
                Insert();
                txtNombrePaciente.requestFocus();

            } else {
                Update();
                tipoQuery = true;
            }

            pc.clearFields();
            isOpen = false;

            disableButtons(false, true, true);
        }
    }

    //Se encarga de realizar la búsequeda de un paciente por nombre o coinsidencia de letras que contiene su nombre,
    //una vez encontado el paciente, se llenan los campos con sus datos y se activa la consulta para actualizar datos tipoQuery= UPDATE
    public void searchUpdate() {
        pc.clearTable();

        String nombreBuscar = JOptionPane.showInputDialog(null, "Ingresa un nombre o parte de él", "Búsqueda de pacientes", QUESTION_MESSAGE);

        if (nombreBuscar != null) {
            if (nombreBuscar.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No se ingresó una coincidencia a buscar", "Búsqueda cancelada", JOptionPane.ERROR_MESSAGE);
            } else {

                Conexion cn = new Conexion();
                Connection cnn = cn.getConnection();
                try {
                    PreparedStatement ps = cnn.prepareStatement("SELECT pe.id_persona, pe.nombre, pe.apellido,"
                            + " pe.email, pe.tipo_documento, pe.numero_documento, pe.celular, pe.fecha_nacimiento,"
                            + " pe.ciudad_origen, pe.departamento_origen, pe.direccion,"
                            + " pa.id_paciente, pa.huella, pa.rh, pa.gestante, pa.sexo, pa.etnia, pa.comunidad, pa.municipio,"
                            + " pa.fecha_registro, pa.id_persona, pa.id_programaPyDT"
                            + " FROM Persona AS pe INNER JOIN Paciente AS pa ON pe.id_persona=pa.id_persona"
                            + " WHERE pe.nombre LIKE '%" + nombreBuscar + "%'");

                    ResultSet rs = ps.executeQuery();

                    while (rs.next()) {

                        modt.addRow(new Object[]{
                            rs.getInt("id_paciente"),
                            rs.getString("nombre"),
                            rs.getString("apellido"),
                            rs.getDate("fecha_nacimiento"),
                            rs.getString("municipio"),
                            rs.getString("comunidad"),
                            rs.getString("tipo_documento"),
                            rs.getInt("numero_documento"),
                            rs.getString("ciudad_origen"),
                            rs.getString("departamento_origen"),
                            rs.getString("sexo"),
                            rs.getString("rh"),
                            rs.getString("gestante"),
                            rs.getString("etnia"),
                            rs.getString("id_programaPyDT"),
                            rs.getInt("celular"),
                            rs.getString("direccion"),
                            rs.getString("email"),
                            rs.getDate("fecha_registro")

                        });
                    }
                    lblIndicadorQuery.setText("LA TABLA MUESTRA LOS RESULTADOS DE LA BÚSQUEDA. Para actualizar una fila puedes dar doble click sobre ella.");

                } catch (SQLException ex) {
                    Logger.getLogger(FormPatientsManagement.class.getName()).log(Level.SEVERE, null, ex);
                    //JOptionPane.showMessageDialog(this, "El paciente NO está registrado en RUIPI","NO HAY REGISTRO", JOptionPane.ERROR_MESSAGE);

                }
            }
        }

    }

    //Se encarga de instanciár un objeto de tipo FormIdentify y asegurarse de que solo se abra una instancia del lector a la vez
    public void identify() {

        System.out.println(isOpen);
        if (isOpen == false) {
            new FormIdentify(this).setVisible(true);

            isOpen = true;
        } else {

            //toaster.error("¡Nombre de usuario o contraseña inválidos!");
            JOptionPane.showMessageDialog(null, "Ya hay una ventana del 'Lector de Huellas' abierta", "Lector en uso", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * @return la huellaPaciente
     */
    public ByteArrayInputStream getHuellaPaciente() {
        return huellaPaciente;
    }

    /**
     * @param huellaPaciente establece la huella del paciente
     */
    public void setHuellaPaciente(ByteArrayInputStream huellaPaciente) {
        this.huellaPaciente = huellaPaciente;
    }

    //Encuentra al paciente, recibe el id del paciente y establece los datos del paciente en los campos 
    //de texto luego de cargarlos al modelo
    public void findP(int id) {

        Conexion cn = new Conexion();
        Connection cnn = cn.getConnection();
        try {
            PreparedStatement ps = cnn.prepareStatement("SELECT * FROM Paciente WHERE id_paciente=?");

            ps.setInt(1, id);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {

                if (rs.getInt("id_paciente") == id) {
                    id_paciente = rs.getInt("id_paciente");
                    tipoQuery = false;
                    txtNombrePaciente.setText(rs.getString("nombre_paciente"));
                    txtIdPaciente.setText(rs.getString("id_paciente"));
                    disableButtons(false, true, false);
                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(FormPatientsManagement.class.getName()).log(Level.SEVERE, null, ex);
            //JOptionPane.showMessageDialog(this, "El paciente NO está registrado en RUIPI","NO HAY REGISTRO", JOptionPane.ERROR_MESSAGE);

        }

    }

    //Obtiene el tamaño de la huella
    public Integer getSizeHUella() {
        return sizeHuella;
    }

    //Establece el tamaño de la huela
    public void setSizeHuella(Integer size) {
        sizeHuella = size;
    }

    //Establece la variabl que controla la consulta para definir si se trata de un INSERT(true) o un UPDATE(false)
    public void setQueryInsert() {
        tipoQuery = true;

    }

    //Realiza la inserciónn de un nuevo registro a la base de datos siempre y cuando no hayan campos obligatorios vacíos
    private void Insert() {

        Conexion cn = new Conexion();
        Connection cnn = cn.getConnection();

        try {
            System.out.println("INSERT");
            PreparedStatement psPersona = cnn.prepareStatement("INSERT INTO Persona"
                    + " (nombre, apellido) VALUES (?,?)");
            PreparedStatement psPaciente = cnn.prepareStatement("INSERT INTO Paciente"
                    + " (huella, sexo, id_persona) VALUES (?,?,last_insert_id())");

            psPersona.setString(1, txtNombrePaciente.getText());
            psPersona.setString(2, txtApellidoPaciente.getText());
            psPersona.execute();

            psPaciente.setBinaryStream(1, huellaPaciente, sizeHuella);
            psPaciente.setString(2, comboSexo.getSelectedItem().toString());
            psPaciente.execute();

            cnn.commit();

            JOptionPane.showMessageDialog(null, "El paciente '" + txtNombrePaciente.getText() + "' se guardó con éxito", "Paciente registrado exitosamente en RUIPI", JOptionPane.INFORMATION_MESSAGE);
            pc.clearFields();

        } catch (SQLException ex) {
            try {
                Logger.getLogger(FormPatientsManagement.class.getName()).log(Level.SEVERE, null, ex);
                cnn.rollback();
            } catch (SQLException ex1) {
                Logger.getLogger(FormPatientsManagement.class.getName()).log(Level.SEVERE, null, ex1);
            }
        }
    }

    //Realiza la actualización de un paciente buscado o identificado cuyos datos estén cargados en el modelo y los campos del formulario de pacientes
    private void Update() {
        Conexion cn = new Conexion();
        Connection cnn = cn.getConnection();

        if ("".equals(txtNombrePaciente.getText()) && huellaPaciente == null) {

            JOptionPane.showMessageDialog(null, "Los campos con asterísco ( * ) son obligatorios", "Hay campos vacíos", JOptionPane.WARNING_MESSAGE);

        } else {

            try {
                //UPDATE Paciente SET huella=?, nombre_paciente=? WHERE id_paciente=?

                System.out.println("UPDATE");
                PreparedStatement ps = cnn.prepareStatement("UPDATE persona, paciente SET"
                        + " paciente.huella = ?, persona.nombre = ?, persona.apellido = ?,"
                        + " paciente.sexo = ?  WHERE persona.id_persona = paciente.id_persona AND paciente.id_paciente= ?;");
                
                ps.setBinaryStream(1, huellaPaciente, sizeHuella);
                ps.setString(2, txtNombrePaciente.getText());
                ps.setString(3, txtApellidoPaciente.getText());
                ps.setString(4, comboSexo.getSelectedItem().toString());
                ps.setInt(5, id_paciente);
                ps.execute();
                
                cnn.commit();
                JOptionPane.showMessageDialog(null, "La actualización del paciente '" + txtNombrePaciente.getText() + "' se guardó con éxito", "Paciente actualizado", JOptionPane.INFORMATION_MESSAGE);
                pc.clearFields();
            } catch (SQLException ex) {
                try {
                    Logger.getLogger(FormPatientsManagement.class.getName()).log(Level.SEVERE, null, ex);
                    cnn.rollback();
                } catch (SQLException ex1) {
                    Logger.getLogger(FormPatientsManagement.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }

        }

    }

    //retorna true o false dependiendo si los campos obligatorios están vaciós y habilita el botón de guardar no están vacíos
    public boolean emptyFields() {

        if (txtNombrePaciente.getText().isEmpty() || huellaPaciente == null) {
            JOptionPane.showMessageDialog(null, "Los campos con asterísco ( * ) son obligatorios", "Hay campos vacíos", JOptionPane.WARNING_MESSAGE);
            txtNombrePaciente.requestFocus();
            return false;

        } else {
            btnSavePOn();
            return true;

        }

    }

    public void btnAsociateOff() {

        btnAssociate.setEnabled(false);
    }

    public void btnAsociateOn() {

        btnAssociate.setEnabled(true);
    }

    public void btnSearchUpdateOff() {

        btnSearchUpdateP.setEnabled(false);
    }

    public void btnSearchUpdateOn() {

        btnSearchUpdateP.setEnabled(true);
    }

    public void btnSavePOn() {
        btnSaveP.setEnabled(true);
    }

    public void btnSavePOff() {
        btnSaveP.setEnabled(false);
    }

    public void btnNewOff() {
        btnNewP.setEnabled(false);
    }

    public void btnNewOn() {
        btnNewP.setEnabled(true);
    }

    //desactiva los botones de Guardar, Buscar y Actualizar e Identificar dependiendo de los parámetros que se le 
    public void disableButtons(boolean save, boolean search, boolean identify) {
        btnSaveP.setEnabled(save);
        btnSearchUpdateP.setEnabled(search);
        btnIdentify.setEnabled(identify);
    }


    private void btnAssociateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAssociateMouseEntered
        btnAssociate.setBackground(UIUtils.COLOR_INTERACTIVE_DARKER);
    }//GEN-LAST:event_btnAssociateMouseEntered

    private void btnSavePMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSavePMouseEntered
        btnSaveP.setBackground(UIUtils.COLOR_INTERACTIVE_DARKER);
    }//GEN-LAST:event_btnSavePMouseEntered

    private void btnSearchUpdatePMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchUpdatePMouseEntered
        btnSearchUpdateP.setBackground(UIUtils.COLOR_INTERACTIVE_DARKER);
    }//GEN-LAST:event_btnSearchUpdatePMouseEntered

    private void btnIdentifyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIdentifyMouseEntered
        btnIdentify.setBackground(UIUtils.COLOR_INTERACTIVE_DARKER);
    }//GEN-LAST:event_btnIdentifyMouseEntered

    private void btnNewPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewPMouseEntered
        btnNewP.setBackground(UIUtils.COLOR_INTERACTIVE_DARKER);
    }//GEN-LAST:event_btnNewPMouseEntered

    private void btnDeletePMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletePMouseEntered
        btnDeleteP.setBackground(UIUtils.COLOR_INTERACTIVE_DARKER2);
    }//GEN-LAST:event_btnDeletePMouseEntered

    private void btnAssociateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAssociateMouseExited
        btnAssociate.setBackground(UIUtils.COLOR_INTERACTIVE);
    }//GEN-LAST:event_btnAssociateMouseExited

    private void btnSavePMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSavePMouseExited
        btnSaveP.setBackground(UIUtils.COLOR_INTERACTIVE);
    }//GEN-LAST:event_btnSavePMouseExited

    private void btnSearchUpdatePMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchUpdatePMouseExited
        btnSearchUpdateP.setBackground(UIUtils.COLOR_INTERACTIVE);
    }//GEN-LAST:event_btnSearchUpdatePMouseExited

    private void btnIdentifyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIdentifyMouseExited
        btnIdentify.setBackground(UIUtils.COLOR_INTERACTIVE);
    }//GEN-LAST:event_btnIdentifyMouseExited

    private void btnNewPMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNewPMouseExited
        btnNewP.setBackground(UIUtils.COLOR_INTERACTIVE);
    }//GEN-LAST:event_btnNewPMouseExited

    private void btnDeletePMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeletePMouseExited
        btnDeleteP.setBackground(UIUtils.COLOR_INTERACTIVE2);
    }//GEN-LAST:event_btnDeletePMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnAssociate;
    public javax.swing.JButton btnDeleteP;
    public javax.swing.JButton btnIdentify;
    public javax.swing.JButton btnNewP;
    public javax.swing.JButton btnSaveP;
    public javax.swing.JButton btnSearchUpdateP;
    public javax.swing.JComboBox<String> comboComunidad;
    public javax.swing.JComboBox<String> comboEtnia;
    public javax.swing.JComboBox<String> comboGestante;
    public javax.swing.JComboBox<String> comboMunicipio;
    public javax.swing.JComboBox<String> comboRh;
    public javax.swing.JComboBox<String> comboSexo;
    public javax.swing.JTextField dateFNacimiento;
    public javax.swing.JTextField dateRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblIndicadorQuery;
    public javax.swing.JTable tableP;
    public javax.swing.JTextField txtApellidoPaciente;
    public javax.swing.JTextField txtCiudadO;
    public javax.swing.JTextField txtDepO;
    public javax.swing.JTextField txtDireccion;
    public javax.swing.JTextField txtEmail;
    public javax.swing.JTextField txtIdPaciente;
    public javax.swing.JTextField txtNombrePaciente;
    public javax.swing.JTextField txtNumDoc;
    public javax.swing.JTextField txtPYDT;
    public javax.swing.JTextField txtTel;
    public javax.swing.JTextField txtTipoDoc;
    // End of variables declaration//GEN-END:variables

}
